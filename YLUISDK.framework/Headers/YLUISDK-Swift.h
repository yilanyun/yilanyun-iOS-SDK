#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YLUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif
















































SWIFT_CLASS("_TtC7YLUISDK11YLHandyJSON")
@interface YLHandyJSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class YLProviderModel;

SWIFT_CLASS("_TtC7YLUISDK17YLCPIsFollowModel")
@interface YLCPIsFollowModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLProviderModel *> * _Nonnull cp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK14YLChannelModel")
@interface YLChannelModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol YLVideoDelegate;
@class UITableView;
@class UITableViewCell;
@class NSBundle;
@class NSCoder;

/// 单个频道页
SWIFT_CLASS("_TtC7YLUISDK24YLFeedListViewController")
@interface YLFeedListViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
/// 频道ID
@property (nonatomic, copy) NSString * _Nullable channelID;
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
- (void)viewDidDisappear:(BOOL)animated;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









/// Feed流刷新类型
typedef SWIFT_ENUM(NSInteger, YLFeedLoadType, open) {
/// 上拉加载更多
  YLFeedLoadTypePullUp = 0,
/// 下拉刷新
  YLFeedLoadTypePullDown = 1,
/// 第一次刷新
  YLFeedLoadTypeFirst = 2,
};


SWIFT_CLASS("_TtC7YLUISDK15YLResponseModel")
@interface YLResponseModel : YLHandyJSON
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频信息
SWIFT_CLASS("_TtC7YLUISDK11YLFeedModel")
@interface YLFeedModel : YLResponseModel
/// 视频ID
@property (nonatomic, copy) NSString * _Nonnull video_id;
/// 标题
@property (nonatomic, copy) NSString * _Nonnull title;
/// 标签
@property (nonatomic, copy) NSString * _Nonnull tags;
/// 分类
@property (nonatomic, copy) NSString * _Nonnull category;
/// 频道ID
@property (nonatomic, copy) NSString * _Nonnull channel_id;
@property (nonatomic) NSInteger is_choice;
/// h5播放页地址
@property (nonatomic, readonly, copy) NSString * _Nonnull shareUrl;
/// 封面图
@property (nonatomic, copy) NSString * _Nonnull image;
/// 播放时长
@property (nonatomic) NSInteger duration;
/// 内容提供者
@property (nonatomic, strong) YLProviderModel * _Nullable provider;
/// 视频内容宽
@property (nonatomic) NSInteger video_w;
/// 视频内容高
@property (nonatomic) NSInteger video_h;
/// 播放数
@property (nonatomic) NSInteger play_num;
/// 点赞数
@property (nonatomic) NSInteger like_num;
/// 评论数
@property (nonatomic) NSInteger comment_num;
/// 是否点赞
@property (nonatomic) BOOL isLike;
/// 发布时间(格式化的字符串)
@property (nonatomic, copy) NSString * _Nonnull publish_date;
/// 创建时间(时间戳)
@property (nonatomic) int64_t create_time;
/// 更新时间(时间戳)
@property (nonatomic) int64_t update_time;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull log_id;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull referpage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 纯H5页面
SWIFT_CLASS("_TtC7YLUISDK18YLH5ViewController")
@interface YLH5ViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKNavigation;

@interface YLH5ViewController (SWIFT_EXTENSION(YLUISDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end



/// 全局配置
SWIFT_CLASS("_TtC7YLUISDK6YLInit")
@interface YLInit : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLInit * _Nonnull shared;)
+ (YLInit * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLInit * _Nonnull)value;
/// SDK Debug信息开关, 默认关闭
@property (nonatomic) BOOL debugMode;
/// SDK版本号
@property (nonatomic, readonly, copy) NSString * _Nonnull SDKVersion;
/// 获取登录状态
@property (nonatomic, readonly) BOOL isLogin;
/// 初始化SDK
- (void)setAccessKey:(NSString * _Nonnull)key token:(NSString * _Nonnull)token sid:(NSString * _Nonnull)sid uid:(NSString * _Nonnull)uid;
/// 用户登录
- (void)loginWithNickname:(NSString * _Nonnull)nickname avatar:(NSString * _Nonnull)avatar phone:(NSString * _Nonnull)phone uid:(NSString * _Nonnull)uid;
/// 用户退出登录
- (void)logout;
/// 切换用户时单独调用
- (void)setUid:(NSString * _Nonnull)uid;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class YLIsLikeModel;

SWIFT_CLASS("_TtC7YLUISDK17YLIsLikeListModel")
@interface YLIsLikeListModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLIsLikeModel *> * _Nonnull video;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7YLUISDK13YLIsLikeModel")
@interface YLIsLikeModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL islike;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 评论展示类型
typedef SWIFT_ENUM(NSInteger, YLLittleCommentType, open) {
/// 只能看不能评论
  YLLittleCommentTypeRead = 0,
/// 支持看和写评论
  YLLittleCommentTypeReadWrite = 1,
/// 不显示评论功能
  YLLittleCommentTypeNone = 2,
};

/// 小视频播放器填充类型
typedef SWIFT_ENUM(NSInteger, YLLittlePlayerContentMode, open) {
/// 非等比例填充，拉伸视频直至两个维度填满播放器区域
  YLLittlePlayerContentModeResize = 0,
/// 等比例填充，直到一个维度填满播放器区域，其中一个维度可能会出现黑边
  YLLittlePlayerContentModeResizeAspect = 1,
/// 等比例填充，直到两个维度都填满播放器区域，其中一个维度部分区域可能会被裁剪
  YLLittlePlayerContentModeResizeAspectFill = 2,
};


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoListController")
@interface YLLittleVideoListController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class UICollectionView;
@class UICollectionViewLayout;
@class UICollectionViewCell;

@interface YLLittleVideoListController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoViewController")
@interface YLLittleVideoViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)play;
- (void)pause;
/// 对当前视频进行负反馈
- (void)disLikeVideo;
/// 替换分享按钮图片
- (void)replaceShareImageWith:(UIImage * _Nonnull)image;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end










@interface YLLittleVideoViewController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



/// 播放页类型
typedef SWIFT_ENUM(NSInteger, YLPlayPageType, open) {
/// 播放页类型-h5
  YLPlayPageTypeWeb = 0,
/// 播放页类型-相关视频
  YLPlayPageTypeRelation = 1,
/// 播放页类型-feed流
  YLPlayPageTypeFeed = 2,
/// 当前页播放
  YLPlayPageTypeDirect = 3,
};


/// CP
SWIFT_CLASS("_TtC7YLUISDK15YLProviderModel")
@interface YLProviderModel : YLHandyJSON
/// 视频提供者ID
@property (nonatomic, copy) NSString * _Nonnull id;
/// 名字
@property (nonatomic, copy) NSString * _Nonnull name;
/// 头像
@property (nonatomic, copy) NSString * _Nonnull avatar;
/// 简介
@property (nonatomic, copy) NSString * _Nonnull aword;
/// 视频数
@property (nonatomic) NSInteger videos;
/// 粉丝数
@property (nonatomic) NSInteger fans;
/// 是否已关注
@property (nonatomic) BOOL islike;
/// CP类型（1：短视频，2：小视频）
@property (nonatomic, copy) NSString * _Nonnull type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 上报
SWIFT_CLASS("_TtC7YLUISDK8YLReport")
@interface YLReport : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLReport * _Nonnull shared;)
+ (YLReport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLReport * _Nonnull)value;
/// 视频展现
- (void)videoShowWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo pos:(NSInteger)pos;
/// 视频播放 (如果用一览的播放器则不用调此方法)
- (void)videoPlayWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// UI入口页
SWIFT_CLASS("_TtC7YLUISDK20YLRootViewController")
@interface YLRootViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// 当前频道滚动到顶部
/// pullRefresh: 是否刷新
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// UI配置
SWIFT_CLASS("_TtC7YLUISDK10YLUIConfig")
@interface YLUIConfig : NSObject
/// H5播放页顶部导航栏-文字和返回按钮的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewTintColor;)
+ (UIColor * _Nonnull)webViewTintColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewTintColor:(UIColor * _Nonnull)value;
/// H5播放页顶部导航栏-背景的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewBgColor;)
+ (UIColor * _Nonnull)webViewBgColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewBgColor:(UIColor * _Nonnull)value;
/// 播放页类型(默认：相关视频；局部信息流不支持当前页播放形式)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLPlayPageType playPageType;)
+ (enum YLPlayPageType)playPageType SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayPageType:(enum YLPlayPageType)value;
/// 是否响应点击头像跳转CP页(默认响应)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL cpInfoResponse;)
+ (BOOL)cpInfoResponse SWIFT_WARN_UNUSED_RESULT;
+ (void)setCpInfoResponse:(BOOL)value;
/// 评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType commentType;)
+ (enum YLLittleCommentType)commentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setCommentType:(enum YLLittleCommentType)value;
/// 是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showShare;)
+ (BOOL)showShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowShare:(BOOL)value;
/// 是否显示关注功能
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showFollow;)
+ (BOOL)showFollow SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowFollow:(BOOL)value;
/// 小视频评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType littleCommentType;)
+ (enum YLLittleCommentType)littleCommentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleCommentType:(enum YLLittleCommentType)value;
/// 小视频播放器填充类型(默认resizeAspect)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittlePlayerContentMode playerContentMode;)
+ (enum YLLittlePlayerContentMode)playerContentMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayerContentMode:(enum YLLittlePlayerContentMode)value;
/// 小视频点赞等按钮位于底部（默认右边）
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL bottomPanel;)
+ (BOOL)bottomPanel SWIFT_WARN_UNUSED_RESULT;
+ (void)setBottomPanel:(BOOL)value;
/// 小视频是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL littleShowShare;)
+ (BOOL)littleShowShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleShowShare:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK15YLUserInfoModel")
@interface YLUserInfoModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull user_hash;
@property (nonatomic, copy) NSString * _Nonnull yltoken;
@property (nonatomic, copy) NSString * _Nonnull status;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频列表请求
SWIFT_CLASS("_TtC7YLUISDK7YLVideo")
@interface YLVideo : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLVideo * _Nonnull shared;)
+ (YLVideo * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLVideo * _Nonnull)value;
/// 通过视频ID打开横版视频播放页
- (void)openMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过视频ID获取横版视频播放页
- (void)getMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate callback:(void (^ _Nonnull)(BOOL, UIViewController * _Nullable))callback backAction:(void (^ _Nonnull)(void))backAction;
/// 获取局部信息流信息
/// @param type : 视频类型  0-横版视频视频  1-竖版视频
/// @param num : 视频数量，1-4个，默认1
/// @param channelID : 指定视频频道，默认从配置内容池选取
- (void)getSubFeedListWithType:(NSString * _Nonnull)type num:(NSInteger)num channelID:(NSString * _Nonnull)channelID callback:(void (^ _Nonnull)(NSArray<YLFeedModel *> * _Nonnull))callback;
/// 通过局部信息流打开横版视频播放页
- (void)openPlayerWith:(YLFeedModel * _Nonnull)model delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过局部信息流打开竖版视频播放页
/// @param list : 视频列表
/// @param playIndex : 打开播放页后展示视频位于list中的下标
- (void)openPlayerWith:(NSArray<YLFeedModel *> * _Nonnull)list playIndex:(NSUInteger)playIndex delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 获取举报视频原因列表
- (NSArray<NSString *> * _Nonnull)getReportReasonList SWIFT_WARN_UNUSED_RESULT;
/// 举报视频
/// @param reason : 选择举报的原因
/// @param otherDescription : 选择其他问题时，填写的具体问题
- (void)reportVideoWith:(NSArray<NSString *> * _Nonnull)reason otherDescription:(NSString * _Nonnull)otherDescription;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7YLUISDK15YLVideoDelegate_")
@protocol YLVideoDelegate
@optional
/// 首个视频开始播放(isAD: 是否是广告)
- (void)firstPlayerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频开始播放
- (void)playerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放暂停状态变化
- (void)playerPauseWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isPause:(BOOL)isPause isAD:(BOOL)isAD;
/// 视频播放结束
- (void)playerEndWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放失败
- (void)playerErrorWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo error:(NSError * _Nullable)error isAD:(BOOL)isAD;
/// 广告信息获取成功
- (void)ylADInfoLoadSuccessWithAdID:(NSString * _Nonnull)adID;
/// 广告信息获取失败
- (void)ylADInfoLoadFailWithAdID:(NSString * _Nonnull)adID error:(NSError * _Nullable)error;
/// 点击分享按钮(isMain: 竖版视频用来标记是否是首页，仅首页支持负反馈功能)
- (void)clickShareBtnWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isMain:(BOOL)isMain;
@end


SWIFT_CLASS("_TtC7YLUISDK15YLVideoInfoCell")
@interface YLVideoInfoCell : UITableViewCell
- (void)awakeFromNib;
- (void)prepareForReuse;
/// 填充数据
- (void)reload:(YLFeedModel * _Nonnull)model;
/// 点击cell打开播放页
- (void)clickWith:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YLUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif
















































SWIFT_CLASS("_TtC7YLUISDK11YLHandyJSON")
@interface YLHandyJSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class YLProviderModel;

SWIFT_CLASS("_TtC7YLUISDK17YLCPIsFollowModel")
@interface YLCPIsFollowModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLProviderModel *> * _Nonnull cp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK14YLChannelModel")
@interface YLChannelModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol YLVideoDelegate;
@class UITableView;
@class UITableViewCell;
@class NSBundle;
@class NSCoder;

/// 单个频道页
SWIFT_CLASS("_TtC7YLUISDK24YLFeedListViewController")
@interface YLFeedListViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
/// 频道ID
@property (nonatomic, copy) NSString * _Nullable channelID;
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
- (void)viewDidDisappear:(BOOL)animated;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









/// Feed流刷新类型
typedef SWIFT_ENUM(NSInteger, YLFeedLoadType, open) {
/// 上拉加载更多
  YLFeedLoadTypePullUp = 0,
/// 下拉刷新
  YLFeedLoadTypePullDown = 1,
/// 第一次刷新
  YLFeedLoadTypeFirst = 2,
};


SWIFT_CLASS("_TtC7YLUISDK15YLResponseModel")
@interface YLResponseModel : YLHandyJSON
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频信息
SWIFT_CLASS("_TtC7YLUISDK11YLFeedModel")
@interface YLFeedModel : YLResponseModel
/// 视频ID
@property (nonatomic, copy) NSString * _Nonnull video_id;
/// 标题
@property (nonatomic, copy) NSString * _Nonnull title;
/// 标签
@property (nonatomic, copy) NSString * _Nonnull tags;
/// 分类
@property (nonatomic, copy) NSString * _Nonnull category;
/// 频道ID
@property (nonatomic, copy) NSString * _Nonnull channel_id;
@property (nonatomic) NSInteger is_choice;
/// h5播放页地址
@property (nonatomic, readonly, copy) NSString * _Nonnull shareUrl;
/// 封面图
@property (nonatomic, copy) NSString * _Nonnull image;
/// 播放时长
@property (nonatomic) NSInteger duration;
/// 内容提供者
@property (nonatomic, strong) YLProviderModel * _Nullable provider;
/// 视频内容宽
@property (nonatomic) NSInteger video_w;
/// 视频内容高
@property (nonatomic) NSInteger video_h;
/// 播放数
@property (nonatomic) NSInteger play_num;
/// 点赞数
@property (nonatomic) NSInteger like_num;
/// 评论数
@property (nonatomic) NSInteger comment_num;
/// 是否点赞
@property (nonatomic) BOOL isLike;
/// 发布时间(格式化的字符串)
@property (nonatomic, copy) NSString * _Nonnull publish_date;
/// 创建时间(时间戳)
@property (nonatomic) int64_t create_time;
/// 更新时间(时间戳)
@property (nonatomic) int64_t update_time;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull log_id;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull referpage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 纯H5页面
SWIFT_CLASS("_TtC7YLUISDK18YLH5ViewController")
@interface YLH5ViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKNavigation;

@interface YLH5ViewController (SWIFT_EXTENSION(YLUISDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end



/// 全局配置
SWIFT_CLASS("_TtC7YLUISDK6YLInit")
@interface YLInit : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLInit * _Nonnull shared;)
+ (YLInit * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLInit * _Nonnull)value;
/// SDK Debug信息开关, 默认关闭
@property (nonatomic) BOOL debugMode;
/// SDK版本号
@property (nonatomic, readonly, copy) NSString * _Nonnull SDKVersion;
/// 获取登录状态
@property (nonatomic, readonly) BOOL isLogin;
/// 初始化SDK
- (void)setAccessKey:(NSString * _Nonnull)key token:(NSString * _Nonnull)token sid:(NSString * _Nonnull)sid uid:(NSString * _Nonnull)uid;
/// 用户登录
- (void)loginWithNickname:(NSString * _Nonnull)nickname avatar:(NSString * _Nonnull)avatar phone:(NSString * _Nonnull)phone uid:(NSString * _Nonnull)uid;
/// 用户退出登录
- (void)logout;
/// 切换用户时单独调用
- (void)setUid:(NSString * _Nonnull)uid;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class YLIsLikeModel;

SWIFT_CLASS("_TtC7YLUISDK17YLIsLikeListModel")
@interface YLIsLikeListModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLIsLikeModel *> * _Nonnull video;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7YLUISDK13YLIsLikeModel")
@interface YLIsLikeModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL islike;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 评论展示类型
typedef SWIFT_ENUM(NSInteger, YLLittleCommentType, open) {
/// 只能看不能评论
  YLLittleCommentTypeRead = 0,
/// 支持看和写评论
  YLLittleCommentTypeReadWrite = 1,
/// 不显示评论功能
  YLLittleCommentTypeNone = 2,
};

/// 小视频播放器填充类型
typedef SWIFT_ENUM(NSInteger, YLLittlePlayerContentMode, open) {
/// 非等比例填充，拉伸视频直至两个维度填满播放器区域
  YLLittlePlayerContentModeResize = 0,
/// 等比例填充，直到一个维度填满播放器区域，其中一个维度可能会出现黑边
  YLLittlePlayerContentModeResizeAspect = 1,
/// 等比例填充，直到两个维度都填满播放器区域，其中一个维度部分区域可能会被裁剪
  YLLittlePlayerContentModeResizeAspectFill = 2,
};


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoListController")
@interface YLLittleVideoListController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class UICollectionView;
@class UICollectionViewLayout;
@class UICollectionViewCell;

@interface YLLittleVideoListController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoViewController")
@interface YLLittleVideoViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)play;
- (void)pause;
/// 对当前视频进行负反馈
- (void)disLikeVideo;
/// 替换分享按钮图片
- (void)replaceShareImageWith:(UIImage * _Nonnull)image;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end










@interface YLLittleVideoViewController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



/// 播放页类型
typedef SWIFT_ENUM(NSInteger, YLPlayPageType, open) {
/// 播放页类型-h5
  YLPlayPageTypeWeb = 0,
/// 播放页类型-相关视频
  YLPlayPageTypeRelation = 1,
/// 播放页类型-feed流
  YLPlayPageTypeFeed = 2,
/// 当前页播放
  YLPlayPageTypeDirect = 3,
};


/// CP
SWIFT_CLASS("_TtC7YLUISDK15YLProviderModel")
@interface YLProviderModel : YLHandyJSON
/// 视频提供者ID
@property (nonatomic, copy) NSString * _Nonnull id;
/// 名字
@property (nonatomic, copy) NSString * _Nonnull name;
/// 头像
@property (nonatomic, copy) NSString * _Nonnull avatar;
/// 简介
@property (nonatomic, copy) NSString * _Nonnull aword;
/// 视频数
@property (nonatomic) NSInteger videos;
/// 粉丝数
@property (nonatomic) NSInteger fans;
/// 是否已关注
@property (nonatomic) BOOL islike;
/// CP类型（1：短视频，2：小视频）
@property (nonatomic, copy) NSString * _Nonnull type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 上报
SWIFT_CLASS("_TtC7YLUISDK8YLReport")
@interface YLReport : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLReport * _Nonnull shared;)
+ (YLReport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLReport * _Nonnull)value;
/// 视频展现
- (void)videoShowWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo pos:(NSInteger)pos;
/// 视频播放 (如果用一览的播放器则不用调此方法)
- (void)videoPlayWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// UI入口页
SWIFT_CLASS("_TtC7YLUISDK20YLRootViewController")
@interface YLRootViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// 当前频道滚动到顶部
/// pullRefresh: 是否刷新
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// UI配置
SWIFT_CLASS("_TtC7YLUISDK10YLUIConfig")
@interface YLUIConfig : NSObject
/// H5播放页顶部导航栏-文字和返回按钮的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewTintColor;)
+ (UIColor * _Nonnull)webViewTintColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewTintColor:(UIColor * _Nonnull)value;
/// H5播放页顶部导航栏-背景的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewBgColor;)
+ (UIColor * _Nonnull)webViewBgColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewBgColor:(UIColor * _Nonnull)value;
/// 播放页类型(默认：相关视频；局部信息流不支持当前页播放形式)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLPlayPageType playPageType;)
+ (enum YLPlayPageType)playPageType SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayPageType:(enum YLPlayPageType)value;
/// 是否响应点击头像跳转CP页(默认响应)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL cpInfoResponse;)
+ (BOOL)cpInfoResponse SWIFT_WARN_UNUSED_RESULT;
+ (void)setCpInfoResponse:(BOOL)value;
/// 评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType commentType;)
+ (enum YLLittleCommentType)commentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setCommentType:(enum YLLittleCommentType)value;
/// 是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showShare;)
+ (BOOL)showShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowShare:(BOOL)value;
/// 是否显示关注功能
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showFollow;)
+ (BOOL)showFollow SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowFollow:(BOOL)value;
/// 小视频评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType littleCommentType;)
+ (enum YLLittleCommentType)littleCommentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleCommentType:(enum YLLittleCommentType)value;
/// 小视频播放器填充类型(默认resizeAspect)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittlePlayerContentMode playerContentMode;)
+ (enum YLLittlePlayerContentMode)playerContentMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayerContentMode:(enum YLLittlePlayerContentMode)value;
/// 小视频点赞等按钮位于底部（默认右边）
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL bottomPanel;)
+ (BOOL)bottomPanel SWIFT_WARN_UNUSED_RESULT;
+ (void)setBottomPanel:(BOOL)value;
/// 小视频是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL littleShowShare;)
+ (BOOL)littleShowShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleShowShare:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK15YLUserInfoModel")
@interface YLUserInfoModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull user_hash;
@property (nonatomic, copy) NSString * _Nonnull yltoken;
@property (nonatomic, copy) NSString * _Nonnull status;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频列表请求
SWIFT_CLASS("_TtC7YLUISDK7YLVideo")
@interface YLVideo : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLVideo * _Nonnull shared;)
+ (YLVideo * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLVideo * _Nonnull)value;
/// 通过视频ID打开横版视频播放页
- (void)openMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过视频ID获取横版视频播放页
- (void)getMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate callback:(void (^ _Nonnull)(BOOL, UIViewController * _Nullable))callback backAction:(void (^ _Nonnull)(void))backAction;
/// 获取局部信息流信息
/// @param type : 视频类型  0-横版视频视频  1-竖版视频
/// @param num : 视频数量，1-4个，默认1
/// @param channelID : 指定视频频道，默认从配置内容池选取
- (void)getSubFeedListWithType:(NSString * _Nonnull)type num:(NSInteger)num channelID:(NSString * _Nonnull)channelID callback:(void (^ _Nonnull)(NSArray<YLFeedModel *> * _Nonnull))callback;
/// 通过局部信息流打开横版视频播放页
- (void)openPlayerWith:(YLFeedModel * _Nonnull)model delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过局部信息流打开竖版视频播放页
/// @param list : 视频列表
/// @param playIndex : 打开播放页后展示视频位于list中的下标
- (void)openPlayerWith:(NSArray<YLFeedModel *> * _Nonnull)list playIndex:(NSUInteger)playIndex delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 获取举报视频原因列表
- (NSArray<NSString *> * _Nonnull)getReportReasonList SWIFT_WARN_UNUSED_RESULT;
/// 举报视频
/// @param reason : 选择举报的原因
/// @param otherDescription : 选择其他问题时，填写的具体问题
- (void)reportVideoWith:(NSArray<NSString *> * _Nonnull)reason otherDescription:(NSString * _Nonnull)otherDescription;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7YLUISDK15YLVideoDelegate_")
@protocol YLVideoDelegate
@optional
/// 首个视频开始播放(isAD: 是否是广告)
- (void)firstPlayerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频开始播放
- (void)playerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放暂停状态变化
- (void)playerPauseWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isPause:(BOOL)isPause isAD:(BOOL)isAD;
/// 视频播放结束
- (void)playerEndWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放失败
- (void)playerErrorWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo error:(NSError * _Nullable)error isAD:(BOOL)isAD;
/// 广告信息获取成功
- (void)ylADInfoLoadSuccessWithAdID:(NSString * _Nonnull)adID;
/// 广告信息获取失败
- (void)ylADInfoLoadFailWithAdID:(NSString * _Nonnull)adID error:(NSError * _Nullable)error;
/// 点击分享按钮(isMain: 竖版视频用来标记是否是首页，仅首页支持负反馈功能)
- (void)clickShareBtnWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isMain:(BOOL)isMain;
@end


SWIFT_CLASS("_TtC7YLUISDK15YLVideoInfoCell")
@interface YLVideoInfoCell : UITableViewCell
- (void)awakeFromNib;
- (void)prepareForReuse;
/// 填充数据
- (void)reload:(YLFeedModel * _Nonnull)model;
/// 点击cell打开播放页
- (void)clickWith:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YLUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif
















































SWIFT_CLASS("_TtC7YLUISDK11YLHandyJSON")
@interface YLHandyJSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class YLProviderModel;

SWIFT_CLASS("_TtC7YLUISDK17YLCPIsFollowModel")
@interface YLCPIsFollowModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLProviderModel *> * _Nonnull cp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK14YLChannelModel")
@interface YLChannelModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol YLVideoDelegate;
@class UITableView;
@class UITableViewCell;
@class NSBundle;
@class NSCoder;

/// 单个频道页
SWIFT_CLASS("_TtC7YLUISDK24YLFeedListViewController")
@interface YLFeedListViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
/// 频道ID
@property (nonatomic, copy) NSString * _Nullable channelID;
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
- (void)viewDidDisappear:(BOOL)animated;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









/// Feed流刷新类型
typedef SWIFT_ENUM(NSInteger, YLFeedLoadType, open) {
/// 上拉加载更多
  YLFeedLoadTypePullUp = 0,
/// 下拉刷新
  YLFeedLoadTypePullDown = 1,
/// 第一次刷新
  YLFeedLoadTypeFirst = 2,
};


SWIFT_CLASS("_TtC7YLUISDK15YLResponseModel")
@interface YLResponseModel : YLHandyJSON
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频信息
SWIFT_CLASS("_TtC7YLUISDK11YLFeedModel")
@interface YLFeedModel : YLResponseModel
/// 视频ID
@property (nonatomic, copy) NSString * _Nonnull video_id;
/// 标题
@property (nonatomic, copy) NSString * _Nonnull title;
/// 标签
@property (nonatomic, copy) NSString * _Nonnull tags;
/// 分类
@property (nonatomic, copy) NSString * _Nonnull category;
/// 频道ID
@property (nonatomic, copy) NSString * _Nonnull channel_id;
@property (nonatomic) NSInteger is_choice;
/// h5播放页地址
@property (nonatomic, readonly, copy) NSString * _Nonnull shareUrl;
/// 封面图
@property (nonatomic, copy) NSString * _Nonnull image;
/// 播放时长
@property (nonatomic) NSInteger duration;
/// 内容提供者
@property (nonatomic, strong) YLProviderModel * _Nullable provider;
/// 视频内容宽
@property (nonatomic) NSInteger video_w;
/// 视频内容高
@property (nonatomic) NSInteger video_h;
/// 播放数
@property (nonatomic) NSInteger play_num;
/// 点赞数
@property (nonatomic) NSInteger like_num;
/// 评论数
@property (nonatomic) NSInteger comment_num;
/// 是否点赞
@property (nonatomic) BOOL isLike;
/// 发布时间(格式化的字符串)
@property (nonatomic, copy) NSString * _Nonnull publish_date;
/// 创建时间(时间戳)
@property (nonatomic) int64_t create_time;
/// 更新时间(时间戳)
@property (nonatomic) int64_t update_time;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull log_id;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull referpage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 纯H5页面
SWIFT_CLASS("_TtC7YLUISDK18YLH5ViewController")
@interface YLH5ViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKNavigation;

@interface YLH5ViewController (SWIFT_EXTENSION(YLUISDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end



/// 全局配置
SWIFT_CLASS("_TtC7YLUISDK6YLInit")
@interface YLInit : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLInit * _Nonnull shared;)
+ (YLInit * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLInit * _Nonnull)value;
/// SDK Debug信息开关, 默认关闭
@property (nonatomic) BOOL debugMode;
/// SDK版本号
@property (nonatomic, readonly, copy) NSString * _Nonnull SDKVersion;
/// 获取登录状态
@property (nonatomic, readonly) BOOL isLogin;
/// 初始化SDK
- (void)setAccessKey:(NSString * _Nonnull)key token:(NSString * _Nonnull)token sid:(NSString * _Nonnull)sid uid:(NSString * _Nonnull)uid;
/// 用户登录
- (void)loginWithNickname:(NSString * _Nonnull)nickname avatar:(NSString * _Nonnull)avatar phone:(NSString * _Nonnull)phone uid:(NSString * _Nonnull)uid;
/// 用户退出登录
- (void)logout;
/// 切换用户时单独调用
- (void)setUid:(NSString * _Nonnull)uid;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class YLIsLikeModel;

SWIFT_CLASS("_TtC7YLUISDK17YLIsLikeListModel")
@interface YLIsLikeListModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLIsLikeModel *> * _Nonnull video;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7YLUISDK13YLIsLikeModel")
@interface YLIsLikeModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL islike;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 评论展示类型
typedef SWIFT_ENUM(NSInteger, YLLittleCommentType, open) {
/// 只能看不能评论
  YLLittleCommentTypeRead = 0,
/// 支持看和写评论
  YLLittleCommentTypeReadWrite = 1,
/// 不显示评论功能
  YLLittleCommentTypeNone = 2,
};

/// 小视频播放器填充类型
typedef SWIFT_ENUM(NSInteger, YLLittlePlayerContentMode, open) {
/// 非等比例填充，拉伸视频直至两个维度填满播放器区域
  YLLittlePlayerContentModeResize = 0,
/// 等比例填充，直到一个维度填满播放器区域，其中一个维度可能会出现黑边
  YLLittlePlayerContentModeResizeAspect = 1,
/// 等比例填充，直到两个维度都填满播放器区域，其中一个维度部分区域可能会被裁剪
  YLLittlePlayerContentModeResizeAspectFill = 2,
};


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoListController")
@interface YLLittleVideoListController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class UICollectionView;
@class UICollectionViewLayout;
@class UICollectionViewCell;

@interface YLLittleVideoListController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoViewController")
@interface YLLittleVideoViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)play;
- (void)pause;
/// 对当前视频进行负反馈
- (void)disLikeVideo;
/// 替换分享按钮图片
- (void)replaceShareImageWith:(UIImage * _Nonnull)image;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end










@interface YLLittleVideoViewController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



/// 播放页类型
typedef SWIFT_ENUM(NSInteger, YLPlayPageType, open) {
/// 播放页类型-h5
  YLPlayPageTypeWeb = 0,
/// 播放页类型-相关视频
  YLPlayPageTypeRelation = 1,
/// 播放页类型-feed流
  YLPlayPageTypeFeed = 2,
/// 当前页播放
  YLPlayPageTypeDirect = 3,
};


/// CP
SWIFT_CLASS("_TtC7YLUISDK15YLProviderModel")
@interface YLProviderModel : YLHandyJSON
/// 视频提供者ID
@property (nonatomic, copy) NSString * _Nonnull id;
/// 名字
@property (nonatomic, copy) NSString * _Nonnull name;
/// 头像
@property (nonatomic, copy) NSString * _Nonnull avatar;
/// 简介
@property (nonatomic, copy) NSString * _Nonnull aword;
/// 视频数
@property (nonatomic) NSInteger videos;
/// 粉丝数
@property (nonatomic) NSInteger fans;
/// 是否已关注
@property (nonatomic) BOOL islike;
/// CP类型（1：短视频，2：小视频）
@property (nonatomic, copy) NSString * _Nonnull type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 上报
SWIFT_CLASS("_TtC7YLUISDK8YLReport")
@interface YLReport : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLReport * _Nonnull shared;)
+ (YLReport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLReport * _Nonnull)value;
/// 视频展现
- (void)videoShowWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo pos:(NSInteger)pos;
/// 视频播放 (如果用一览的播放器则不用调此方法)
- (void)videoPlayWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// UI入口页
SWIFT_CLASS("_TtC7YLUISDK20YLRootViewController")
@interface YLRootViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// 当前频道滚动到顶部
/// pullRefresh: 是否刷新
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// UI配置
SWIFT_CLASS("_TtC7YLUISDK10YLUIConfig")
@interface YLUIConfig : NSObject
/// H5播放页顶部导航栏-文字和返回按钮的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewTintColor;)
+ (UIColor * _Nonnull)webViewTintColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewTintColor:(UIColor * _Nonnull)value;
/// H5播放页顶部导航栏-背景的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewBgColor;)
+ (UIColor * _Nonnull)webViewBgColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewBgColor:(UIColor * _Nonnull)value;
/// 播放页类型(默认：相关视频；局部信息流不支持当前页播放形式)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLPlayPageType playPageType;)
+ (enum YLPlayPageType)playPageType SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayPageType:(enum YLPlayPageType)value;
/// 是否响应点击头像跳转CP页(默认响应)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL cpInfoResponse;)
+ (BOOL)cpInfoResponse SWIFT_WARN_UNUSED_RESULT;
+ (void)setCpInfoResponse:(BOOL)value;
/// 评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType commentType;)
+ (enum YLLittleCommentType)commentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setCommentType:(enum YLLittleCommentType)value;
/// 是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showShare;)
+ (BOOL)showShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowShare:(BOOL)value;
/// 是否显示关注功能
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showFollow;)
+ (BOOL)showFollow SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowFollow:(BOOL)value;
/// 小视频评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType littleCommentType;)
+ (enum YLLittleCommentType)littleCommentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleCommentType:(enum YLLittleCommentType)value;
/// 小视频播放器填充类型(默认resizeAspect)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittlePlayerContentMode playerContentMode;)
+ (enum YLLittlePlayerContentMode)playerContentMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayerContentMode:(enum YLLittlePlayerContentMode)value;
/// 小视频点赞等按钮位于底部（默认右边）
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL bottomPanel;)
+ (BOOL)bottomPanel SWIFT_WARN_UNUSED_RESULT;
+ (void)setBottomPanel:(BOOL)value;
/// 小视频是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL littleShowShare;)
+ (BOOL)littleShowShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleShowShare:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK15YLUserInfoModel")
@interface YLUserInfoModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull user_hash;
@property (nonatomic, copy) NSString * _Nonnull yltoken;
@property (nonatomic, copy) NSString * _Nonnull status;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频列表请求
SWIFT_CLASS("_TtC7YLUISDK7YLVideo")
@interface YLVideo : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLVideo * _Nonnull shared;)
+ (YLVideo * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLVideo * _Nonnull)value;
/// 通过视频ID打开横版视频播放页
- (void)openMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过视频ID获取横版视频播放页
- (void)getMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate callback:(void (^ _Nonnull)(BOOL, UIViewController * _Nullable))callback backAction:(void (^ _Nonnull)(void))backAction;
/// 获取局部信息流信息
/// @param type : 视频类型  0-横版视频视频  1-竖版视频
/// @param num : 视频数量，1-4个，默认1
/// @param channelID : 指定视频频道，默认从配置内容池选取
- (void)getSubFeedListWithType:(NSString * _Nonnull)type num:(NSInteger)num channelID:(NSString * _Nonnull)channelID callback:(void (^ _Nonnull)(NSArray<YLFeedModel *> * _Nonnull))callback;
/// 通过局部信息流打开横版视频播放页
- (void)openPlayerWith:(YLFeedModel * _Nonnull)model delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过局部信息流打开竖版视频播放页
/// @param list : 视频列表
/// @param playIndex : 打开播放页后展示视频位于list中的下标
- (void)openPlayerWith:(NSArray<YLFeedModel *> * _Nonnull)list playIndex:(NSUInteger)playIndex delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 获取举报视频原因列表
- (NSArray<NSString *> * _Nonnull)getReportReasonList SWIFT_WARN_UNUSED_RESULT;
/// 举报视频
/// @param reason : 选择举报的原因
/// @param otherDescription : 选择其他问题时，填写的具体问题
- (void)reportVideoWith:(NSArray<NSString *> * _Nonnull)reason otherDescription:(NSString * _Nonnull)otherDescription;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7YLUISDK15YLVideoDelegate_")
@protocol YLVideoDelegate
@optional
/// 首个视频开始播放(isAD: 是否是广告)
- (void)firstPlayerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频开始播放
- (void)playerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放暂停状态变化
- (void)playerPauseWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isPause:(BOOL)isPause isAD:(BOOL)isAD;
/// 视频播放结束
- (void)playerEndWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放失败
- (void)playerErrorWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo error:(NSError * _Nullable)error isAD:(BOOL)isAD;
/// 广告信息获取成功
- (void)ylADInfoLoadSuccessWithAdID:(NSString * _Nonnull)adID;
/// 广告信息获取失败
- (void)ylADInfoLoadFailWithAdID:(NSString * _Nonnull)adID error:(NSError * _Nullable)error;
/// 点击分享按钮(isMain: 竖版视频用来标记是否是首页，仅首页支持负反馈功能)
- (void)clickShareBtnWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isMain:(BOOL)isMain;
@end


SWIFT_CLASS("_TtC7YLUISDK15YLVideoInfoCell")
@interface YLVideoInfoCell : UITableViewCell
- (void)awakeFromNib;
- (void)prepareForReuse;
/// 填充数据
- (void)reload:(YLFeedModel * _Nonnull)model;
/// 点击cell打开播放页
- (void)clickWith:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YLUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif
















































SWIFT_CLASS("_TtC7YLUISDK11YLHandyJSON")
@interface YLHandyJSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class YLProviderModel;

SWIFT_CLASS("_TtC7YLUISDK17YLCPIsFollowModel")
@interface YLCPIsFollowModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLProviderModel *> * _Nonnull cp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK14YLChannelModel")
@interface YLChannelModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol YLVideoDelegate;
@class UITableView;
@class UITableViewCell;
@class NSBundle;
@class NSCoder;

/// 单个频道页
SWIFT_CLASS("_TtC7YLUISDK24YLFeedListViewController")
@interface YLFeedListViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
/// 频道ID
@property (nonatomic, copy) NSString * _Nullable channelID;
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
- (void)viewDidDisappear:(BOOL)animated;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









/// Feed流刷新类型
typedef SWIFT_ENUM(NSInteger, YLFeedLoadType, open) {
/// 上拉加载更多
  YLFeedLoadTypePullUp = 0,
/// 下拉刷新
  YLFeedLoadTypePullDown = 1,
/// 第一次刷新
  YLFeedLoadTypeFirst = 2,
};


SWIFT_CLASS("_TtC7YLUISDK15YLResponseModel")
@interface YLResponseModel : YLHandyJSON
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频信息
SWIFT_CLASS("_TtC7YLUISDK11YLFeedModel")
@interface YLFeedModel : YLResponseModel
/// 视频ID
@property (nonatomic, copy) NSString * _Nonnull video_id;
/// 标题
@property (nonatomic, copy) NSString * _Nonnull title;
/// 标签
@property (nonatomic, copy) NSString * _Nonnull tags;
/// 分类
@property (nonatomic, copy) NSString * _Nonnull category;
/// 频道ID
@property (nonatomic, copy) NSString * _Nonnull channel_id;
@property (nonatomic) NSInteger is_choice;
/// h5播放页地址
@property (nonatomic, readonly, copy) NSString * _Nonnull shareUrl;
/// 封面图
@property (nonatomic, copy) NSString * _Nonnull image;
/// 播放时长
@property (nonatomic) NSInteger duration;
/// 内容提供者
@property (nonatomic, strong) YLProviderModel * _Nullable provider;
/// 视频内容宽
@property (nonatomic) NSInteger video_w;
/// 视频内容高
@property (nonatomic) NSInteger video_h;
/// 播放数
@property (nonatomic) NSInteger play_num;
/// 点赞数
@property (nonatomic) NSInteger like_num;
/// 评论数
@property (nonatomic) NSInteger comment_num;
/// 是否点赞
@property (nonatomic) BOOL isLike;
/// 发布时间(格式化的字符串)
@property (nonatomic, copy) NSString * _Nonnull publish_date;
/// 创建时间(时间戳)
@property (nonatomic) int64_t create_time;
/// 更新时间(时间戳)
@property (nonatomic) int64_t update_time;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull log_id;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull referpage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 纯H5页面
SWIFT_CLASS("_TtC7YLUISDK18YLH5ViewController")
@interface YLH5ViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKNavigation;

@interface YLH5ViewController (SWIFT_EXTENSION(YLUISDK)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end



/// 全局配置
SWIFT_CLASS("_TtC7YLUISDK6YLInit")
@interface YLInit : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLInit * _Nonnull shared;)
+ (YLInit * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLInit * _Nonnull)value;
/// SDK Debug信息开关, 默认关闭
@property (nonatomic) BOOL debugMode;
/// SDK版本号
@property (nonatomic, readonly, copy) NSString * _Nonnull SDKVersion;
/// 获取登录状态
@property (nonatomic, readonly) BOOL isLogin;
/// 初始化SDK
- (void)setAccessKey:(NSString * _Nonnull)key token:(NSString * _Nonnull)token sid:(NSString * _Nonnull)sid uid:(NSString * _Nonnull)uid;
/// 用户登录
- (void)loginWithNickname:(NSString * _Nonnull)nickname avatar:(NSString * _Nonnull)avatar phone:(NSString * _Nonnull)phone uid:(NSString * _Nonnull)uid;
/// 用户退出登录
- (void)logout;
/// 切换用户时单独调用
- (void)setUid:(NSString * _Nonnull)uid;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class YLIsLikeModel;

SWIFT_CLASS("_TtC7YLUISDK17YLIsLikeListModel")
@interface YLIsLikeListModel : YLHandyJSON
@property (nonatomic, copy) NSArray<YLIsLikeModel *> * _Nonnull video;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7YLUISDK13YLIsLikeModel")
@interface YLIsLikeModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL islike;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 评论展示类型
typedef SWIFT_ENUM(NSInteger, YLLittleCommentType, open) {
/// 只能看不能评论
  YLLittleCommentTypeRead = 0,
/// 支持看和写评论
  YLLittleCommentTypeReadWrite = 1,
/// 不显示评论功能
  YLLittleCommentTypeNone = 2,
};

/// 小视频播放器填充类型
typedef SWIFT_ENUM(NSInteger, YLLittlePlayerContentMode, open) {
/// 非等比例填充，拉伸视频直至两个维度填满播放器区域
  YLLittlePlayerContentModeResize = 0,
/// 等比例填充，直到一个维度填满播放器区域，其中一个维度可能会出现黑边
  YLLittlePlayerContentModeResizeAspect = 1,
/// 等比例填充，直到两个维度都填满播放器区域，其中一个维度部分区域可能会被裁剪
  YLLittlePlayerContentModeResizeAspectFill = 2,
};


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoListController")
@interface YLLittleVideoListController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class UICollectionView;
@class UICollectionViewLayout;
@class UICollectionViewCell;

@interface YLLittleVideoListController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC7YLUISDK27YLLittleVideoViewController")
@interface YLLittleVideoViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)play;
- (void)pause;
/// 对当前视频进行负反馈
- (void)disLikeVideo;
/// 替换分享按钮图片
- (void)replaceShareImageWith:(UIImage * _Nonnull)image;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end










@interface YLLittleVideoViewController (SWIFT_EXTENSION(YLUISDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



/// 播放页类型
typedef SWIFT_ENUM(NSInteger, YLPlayPageType, open) {
/// 播放页类型-h5
  YLPlayPageTypeWeb = 0,
/// 播放页类型-相关视频
  YLPlayPageTypeRelation = 1,
/// 播放页类型-feed流
  YLPlayPageTypeFeed = 2,
/// 当前页播放
  YLPlayPageTypeDirect = 3,
};


/// CP
SWIFT_CLASS("_TtC7YLUISDK15YLProviderModel")
@interface YLProviderModel : YLHandyJSON
/// 视频提供者ID
@property (nonatomic, copy) NSString * _Nonnull id;
/// 名字
@property (nonatomic, copy) NSString * _Nonnull name;
/// 头像
@property (nonatomic, copy) NSString * _Nonnull avatar;
/// 简介
@property (nonatomic, copy) NSString * _Nonnull aword;
/// 视频数
@property (nonatomic) NSInteger videos;
/// 粉丝数
@property (nonatomic) NSInteger fans;
/// 是否已关注
@property (nonatomic) BOOL islike;
/// CP类型（1：短视频，2：小视频）
@property (nonatomic, copy) NSString * _Nonnull type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 上报
SWIFT_CLASS("_TtC7YLUISDK8YLReport")
@interface YLReport : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLReport * _Nonnull shared;)
+ (YLReport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLReport * _Nonnull)value;
/// 视频展现
- (void)videoShowWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo pos:(NSInteger)pos;
/// 视频播放 (如果用一览的播放器则不用调此方法)
- (void)videoPlayWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// UI入口页
SWIFT_CLASS("_TtC7YLUISDK20YLRootViewController")
@interface YLRootViewController : UIViewController
@property (nonatomic, weak) id <YLVideoDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// 当前频道滚动到顶部
/// pullRefresh: 是否刷新
- (void)scrollToTopWithPullRefresh:(BOOL)pullRefresh;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// UI配置
SWIFT_CLASS("_TtC7YLUISDK10YLUIConfig")
@interface YLUIConfig : NSObject
/// H5播放页顶部导航栏-文字和返回按钮的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewTintColor;)
+ (UIColor * _Nonnull)webViewTintColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewTintColor:(UIColor * _Nonnull)value;
/// H5播放页顶部导航栏-背景的颜色
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull webViewBgColor;)
+ (UIColor * _Nonnull)webViewBgColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWebViewBgColor:(UIColor * _Nonnull)value;
/// 播放页类型(默认：相关视频；局部信息流不支持当前页播放形式)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLPlayPageType playPageType;)
+ (enum YLPlayPageType)playPageType SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayPageType:(enum YLPlayPageType)value;
/// 是否响应点击头像跳转CP页(默认响应)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL cpInfoResponse;)
+ (BOOL)cpInfoResponse SWIFT_WARN_UNUSED_RESULT;
+ (void)setCpInfoResponse:(BOOL)value;
/// 评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType commentType;)
+ (enum YLLittleCommentType)commentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setCommentType:(enum YLLittleCommentType)value;
/// 是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showShare;)
+ (BOOL)showShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowShare:(BOOL)value;
/// 是否显示关注功能
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showFollow;)
+ (BOOL)showFollow SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowFollow:(BOOL)value;
/// 小视频评论展示类型(默认不显示)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittleCommentType littleCommentType;)
+ (enum YLLittleCommentType)littleCommentType SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleCommentType:(enum YLLittleCommentType)value;
/// 小视频播放器填充类型(默认resizeAspect)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum YLLittlePlayerContentMode playerContentMode;)
+ (enum YLLittlePlayerContentMode)playerContentMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlayerContentMode:(enum YLLittlePlayerContentMode)value;
/// 小视频点赞等按钮位于底部（默认右边）
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL bottomPanel;)
+ (BOOL)bottomPanel SWIFT_WARN_UNUSED_RESULT;
+ (void)setBottomPanel:(BOOL)value;
/// 小视频是否显示分享按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL littleShowShare;)
+ (BOOL)littleShowShare SWIFT_WARN_UNUSED_RESULT;
+ (void)setLittleShowShare:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC7YLUISDK15YLUserInfoModel")
@interface YLUserInfoModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull user_hash;
@property (nonatomic, copy) NSString * _Nonnull yltoken;
@property (nonatomic, copy) NSString * _Nonnull status;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 视频列表请求
SWIFT_CLASS("_TtC7YLUISDK7YLVideo")
@interface YLVideo : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLVideo * _Nonnull shared;)
+ (YLVideo * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLVideo * _Nonnull)value;
/// 通过视频ID打开横版视频播放页
- (void)openMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过视频ID获取横版视频播放页
- (void)getMediaPageWith:(NSString * _Nonnull)videoID delegate:(id <YLVideoDelegate> _Nullable)delegate callback:(void (^ _Nonnull)(BOOL, UIViewController * _Nullable))callback backAction:(void (^ _Nonnull)(void))backAction;
/// 获取局部信息流信息
/// @param type : 视频类型  0-横版视频视频  1-竖版视频
/// @param num : 视频数量，1-4个，默认1
/// @param channelID : 指定视频频道，默认从配置内容池选取
- (void)getSubFeedListWithType:(NSString * _Nonnull)type num:(NSInteger)num channelID:(NSString * _Nonnull)channelID callback:(void (^ _Nonnull)(NSArray<YLFeedModel *> * _Nonnull))callback;
/// 通过局部信息流打开横版视频播放页
- (void)openPlayerWith:(YLFeedModel * _Nonnull)model delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 通过局部信息流打开竖版视频播放页
/// @param list : 视频列表
/// @param playIndex : 打开播放页后展示视频位于list中的下标
- (void)openPlayerWith:(NSArray<YLFeedModel *> * _Nonnull)list playIndex:(NSUInteger)playIndex delegate:(id <YLVideoDelegate> _Nullable)delegate viewController:(UIViewController * _Nonnull)viewController;
/// 获取举报视频原因列表
- (NSArray<NSString *> * _Nonnull)getReportReasonList SWIFT_WARN_UNUSED_RESULT;
/// 举报视频
/// @param reason : 选择举报的原因
/// @param otherDescription : 选择其他问题时，填写的具体问题
- (void)reportVideoWith:(NSArray<NSString *> * _Nonnull)reason otherDescription:(NSString * _Nonnull)otherDescription;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7YLUISDK15YLVideoDelegate_")
@protocol YLVideoDelegate
@optional
/// 首个视频开始播放(isAD: 是否是广告)
- (void)firstPlayerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频开始播放
- (void)playerStartWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放暂停状态变化
- (void)playerPauseWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isPause:(BOOL)isPause isAD:(BOOL)isAD;
/// 视频播放结束
- (void)playerEndWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isAD:(BOOL)isAD;
/// 视频播放失败
- (void)playerErrorWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo error:(NSError * _Nullable)error isAD:(BOOL)isAD;
/// 广告信息获取成功
- (void)ylADInfoLoadSuccessWithAdID:(NSString * _Nonnull)adID;
/// 广告信息获取失败
- (void)ylADInfoLoadFailWithAdID:(NSString * _Nonnull)adID error:(NSError * _Nullable)error;
/// 点击分享按钮(isMain: 竖版视频用来标记是否是首页，仅首页支持负反馈功能)
- (void)clickShareBtnWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo isMain:(BOOL)isMain;
@end


SWIFT_CLASS("_TtC7YLUISDK15YLVideoInfoCell")
@interface YLVideoInfoCell : UITableViewCell
- (void)awakeFromNib;
- (void)prepareForReuse;
/// 填充数据
- (void)reload:(YLFeedModel * _Nonnull)model;
/// 点击cell打开播放页
- (void)clickWith:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
