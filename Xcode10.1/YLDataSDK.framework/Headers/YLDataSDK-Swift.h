// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YLDataSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




















SWIFT_CLASS("_TtC9YLDataSDK11YLHandyJSON")
@interface YLHandyJSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 频道-数据结构
SWIFT_CLASS("_TtC9YLDataSDK14YLChannelModel")
@interface YLChannelModel : YLHandyJSON
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Feed流刷新类型
typedef SWIFT_ENUM(NSInteger, YLFeedLoadType, closed) {
/// 上拉
  YLFeedLoadTypePullUp = 0,
/// 下拉
  YLFeedLoadTypePullDown = 1,
/// 第一次刷新
  YLFeedLoadTypeFirst = 2,
};


SWIFT_CLASS("_TtC9YLDataSDK15YLResponseModel")
@interface YLResponseModel : YLHandyJSON
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class YLProviderModel;

/// 视频信息
SWIFT_CLASS("_TtC9YLDataSDK11YLFeedModel")
@interface YLFeedModel : YLResponseModel
/// 视频ID
@property (nonatomic, copy) NSString * _Nonnull video_id;
/// 标题
@property (nonatomic, copy) NSString * _Nonnull title;
/// 标签
@property (nonatomic, copy) NSString * _Nonnull tags;
/// 分类
@property (nonatomic, copy) NSString * _Nonnull category;
/// 频道ID
@property (nonatomic, copy) NSString * _Nonnull channel_id;
@property (nonatomic) NSInteger is_choice;
/// h5播放页地址
@property (nonatomic, copy) NSString * _Nonnull h5_url;
/// 封面图
@property (nonatomic, copy) NSString * _Nonnull image;
/// 播放时长
@property (nonatomic) NSInteger duration;
/// 内容提供者
@property (nonatomic, strong) YLProviderModel * _Nullable provider;
/// 视频内容宽
@property (nonatomic) NSInteger video_w;
/// 视频内容高
@property (nonatomic) NSInteger video_h;
/// 播放数
@property (nonatomic) NSInteger play_num;
/// 点赞数
@property (nonatomic) NSInteger like_num;
/// 发布时间(格式化的字符串)
@property (nonatomic, copy) NSString * _Nonnull publish_date;
/// 创建时间(时间戳)
@property (nonatomic) int64_t create_time;
/// 更新时间(时间戳)
@property (nonatomic) int64_t update_time;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull log_id;
/// 上报用
@property (nonatomic, copy) NSString * _Nonnull referpage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// 全局配置
SWIFT_CLASS("_TtC9YLDataSDK6YLInit")
@interface YLInit : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLInit * _Nonnull shared;)
+ (YLInit * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLInit * _Nonnull)value;
/// 初始化SDK
- (void)setAccessKey:(NSString * _Nonnull)key token:(NSString * _Nonnull)token sid:(NSString * _Nonnull)sid uid:(NSString * _Nonnull)uid;
/// 切换用户时单独调用
- (void)setUid:(NSString * _Nonnull)uid;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// CP
SWIFT_CLASS("_TtC9YLDataSDK15YLProviderModel")
@interface YLProviderModel : YLHandyJSON
/// 视频提供者ID
@property (nonatomic, copy) NSString * _Nonnull id;
/// 名字
@property (nonatomic, copy) NSString * _Nonnull name;
/// 头像
@property (nonatomic, copy) NSString * _Nonnull avatar;
/// 简介
@property (nonatomic, copy) NSString * _Nonnull aword;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 上报
SWIFT_CLASS("_TtC9YLDataSDK8YLReport")
@interface YLReport : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLReport * _Nonnull shared;)
+ (YLReport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLReport * _Nonnull)value;
/// 视频展现
- (void)videoShowWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo;
/// 视频播放 (如果用一览的播放器则不用调此方法)
- (void)videoPlayWithVideoInfo:(YLFeedModel * _Nonnull)videoInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// 视频列表请求
SWIFT_CLASS("_TtC9YLDataSDK7YLVideo")
@interface YLVideo : NSObject
/// 单例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) YLVideo * _Nonnull shared;)
+ (YLVideo * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(YLVideo * _Nonnull)value;
/// 频道列表
- (void)getChannelsWithCallback:(void (^ _Nonnull)(BOOL, NSArray<YLChannelModel *> * _Nullable))callback;
/// 频道信息流
- (void)getFeedListWithChannelId:(NSString * _Nonnull)channelId loadType:(enum YLFeedLoadType)loadType callback:(void (^ _Nonnull)(BOOL, NSArray<YLFeedModel *> * _Nullable))callback;
/// 相关视频
- (void)getRelationListWithVideoId:(NSString * _Nonnull)videoId callback:(void (^ _Nonnull)(BOOL, NSArray<YLFeedModel *> * _Nullable))callback;
- (void)getRelationFeedListWithVideoId:(NSString * _Nonnull)videoId page:(NSString * _Nonnull)page callback:(void (^ _Nonnull)(BOOL, NSArray<YLFeedModel *> * _Nullable))callback;
/// 视频详情
- (void)getVideoDetailWithVideoId:(NSString * _Nonnull)videoId callback:(void (^ _Nonnull)(BOOL, YLFeedModel * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
